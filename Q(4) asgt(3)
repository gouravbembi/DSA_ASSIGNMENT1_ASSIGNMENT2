#include <iostream>
#include <string>
#include <stack>
using namespace std;

int prio(char ch) {
    if (ch == '+' || ch == '-') return 1;
    else if (ch == '*' || ch == '/') return 2;
    return 0;
}

string solve(string val1, string val2, char ch) {
    string s = "";
      
    s += val1;
    s += val2;
    s.push_back(ch);
    return s;
}

int main() {
    stack<string> val;
    stack<char> op;
    string s = "4+(7*8)-9";  
    for (int i = 0; i < s.length(); i++) {
       
        if(s[i]>=48 && s[i]<58){
            val.push(to_string(s[i]-48));
        }
        
        else if (s[i] == '(') {
            op.push(s[i]);
        }
        else if (s[i] == ')') {
            while (!op.empty() && op.top() != '(') {
                char ch = op.top(); op.pop();
                string val2 = val.top(); val.pop();
                string val1 = val.top(); val.pop();
                string ans = solve(val1, val2, ch);
                val.push(ans);
            }
            op.pop(); 
        }
        else { 
            while (!op.empty() && prio(s[i]) <= prio(op.top())) {
                if (op.top() == '(') break;
                char ch = op.top(); op.pop();
                string val2 = val.top(); val.pop();
                string val1 = val.top(); val.pop();
                string ans = solve(val1, val2, ch);
                val.push(ans);
            }
            op.push(s[i]);
        }
    }
    

    while (!op.empty()) {
        char ch = op.top(); op.pop();
        string val2 = val.top(); val.pop();
        string val1 = val.top(); val.pop();
        string ans = solve(val1, val2, ch);
        val.push(ans);
    }

    cout << "postfix Expression: " << val.top() << endl;
}


